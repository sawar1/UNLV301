
GccDA3B.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000014  00800100  00000846  000008da  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000846  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000016  00800114  00800114  000008ee  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000008ee  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000094c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000048  00000000  00000000  0000098c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000008b3  00000000  00000000  000009d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000076a  00000000  00000000  00001287  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000373  00000000  00000000  000019f1  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000e4  00000000  00000000  00001d64  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003e2  00000000  00000000  00001e48  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000259  00000000  00000000  0000222a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000038  00000000  00000000  00002483  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 e0 00 	jmp	0x1c0	; 0x1c0 <__vector_13>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e6 e4       	ldi	r30, 0x46	; 70
  7c:	f8 e0       	ldi	r31, 0x08	; 8
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a4 31       	cpi	r26, 0x14	; 20
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a4 e1       	ldi	r26, 0x14	; 20
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	aa 32       	cpi	r26, 0x2A	; 42
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 cb 00 	call	0x196	; 0x196 <main>
  9e:	0c 94 21 04 	jmp	0x842	; 0x842 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <adc_init>:
}

void adc_init(void)
{
	/** Setup and enable ADC **/
	ADMUX = (0<<REFS1)| // Reference Selection Bits
  a6:	82 e4       	ldi	r24, 0x42	; 66
  a8:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
	(0<<ADLAR)| // ADC Left Adjust Result
	(0<<MUX2)| // ANalog Channel Selection Bits
	(1<<MUX1)| // ADC2 (PC2 PIN25)
	(0<<MUX0);

	ADCSRA = (1<<ADEN)| // ADC ENable
  ac:	85 e8       	ldi	r24, 0x85	; 133
  ae:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
	(0<<ADPS1)|
	(1<<ADPS0);

	// Timer/Counter1 Interrupt Mask Register

	TIMSK1 |= (1<<TOIE1); // enable overflow interrupt
  b2:	ef e6       	ldi	r30, 0x6F	; 111
  b4:	f0 e0       	ldi	r31, 0x00	; 0
  b6:	80 81       	ld	r24, Z
  b8:	81 60       	ori	r24, 0x01	; 1
  ba:	80 83       	st	Z, r24
	TCCR1B |= (1<<CS12)|(1<<CS10); // native clock
  bc:	e1 e8       	ldi	r30, 0x81	; 129
  be:	f0 e0       	ldi	r31, 0x00	; 0
  c0:	80 81       	ld	r24, Z
  c2:	85 60       	ori	r24, 0x05	; 5
  c4:	80 83       	st	Z, r24
	TCNT1 = 49911;		//set Timer counter
  c6:	87 ef       	ldi	r24, 0xF7	; 247
  c8:	92 ec       	ldi	r25, 0xC2	; 194
  ca:	90 93 85 00 	sts	0x0085, r25	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
  ce:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
  d2:	08 95       	ret

000000d4 <read_adc>:
}

/* READ ADC PINS */
void read_adc(void) {
	unsigned char i =4;
	adc_temp = 0;
  d4:	10 92 29 01 	sts	0x0129, r1	; 0x800129 <adc_temp+0x1>
  d8:	10 92 28 01 	sts	0x0128, r1	; 0x800128 <adc_temp>
  dc:	24 e0       	ldi	r18, 0x04	; 4
	while (i--) {
		ADCSRA |= (1<<ADSC);
  de:	ea e7       	ldi	r30, 0x7A	; 122
  e0:	f0 e0       	ldi	r31, 0x00	; 0
		while(ADCSRA & (1<<ADSC));
		adc_temp+= ADC;
  e2:	a8 e7       	ldi	r26, 0x78	; 120
  e4:	b0 e0       	ldi	r27, 0x00	; 0
/* READ ADC PINS */
void read_adc(void) {
	unsigned char i =4;
	adc_temp = 0;
	while (i--) {
		ADCSRA |= (1<<ADSC);
  e6:	80 81       	ld	r24, Z
  e8:	80 64       	ori	r24, 0x40	; 64
  ea:	80 83       	st	Z, r24
		while(ADCSRA & (1<<ADSC));
  ec:	80 81       	ld	r24, Z
  ee:	86 fd       	sbrc	r24, 6
  f0:	fd cf       	rjmp	.-6      	; 0xec <read_adc+0x18>
		adc_temp+= ADC;
  f2:	4d 91       	ld	r20, X+
  f4:	5c 91       	ld	r21, X
  f6:	11 97       	sbiw	r26, 0x01	; 1
  f8:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <adc_temp>
  fc:	90 91 29 01 	lds	r25, 0x0129	; 0x800129 <adc_temp+0x1>
 100:	84 0f       	add	r24, r20
 102:	95 1f       	adc	r25, r21
 104:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <adc_temp+0x1>
 108:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <adc_temp>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 10c:	3f ef       	ldi	r19, 0xFF	; 255
 10e:	80 e7       	ldi	r24, 0x70	; 112
 110:	92 e0       	ldi	r25, 0x02	; 2
 112:	31 50       	subi	r19, 0x01	; 1
 114:	80 40       	sbci	r24, 0x00	; 0
 116:	90 40       	sbci	r25, 0x00	; 0
 118:	e1 f7       	brne	.-8      	; 0x112 <read_adc+0x3e>
 11a:	00 c0       	rjmp	.+0      	; 0x11c <read_adc+0x48>
 11c:	00 00       	nop
 11e:	21 50       	subi	r18, 0x01	; 1

/* READ ADC PINS */
void read_adc(void) {
	unsigned char i =4;
	adc_temp = 0;
	while (i--) {
 120:	11 f7       	brne	.-60     	; 0xe6 <read_adc+0x12>
		ADCSRA |= (1<<ADSC);
		while(ADCSRA & (1<<ADSC));
		adc_temp+= ADC;
		_delay_ms(50);
	}
	adc_temp = adc_temp / 8; // Average a few samples
 122:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <adc_temp>
 126:	90 91 29 01 	lds	r25, 0x0129	; 0x800129 <adc_temp+0x1>
 12a:	96 95       	lsr	r25
 12c:	87 95       	ror	r24
 12e:	96 95       	lsr	r25
 130:	87 95       	ror	r24
 132:	96 95       	lsr	r25
 134:	87 95       	ror	r24
 136:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <adc_temp+0x1>
 13a:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <adc_temp>
	adc_temp = adc_temp /2;
 13e:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <adc_temp>
 142:	90 91 29 01 	lds	r25, 0x0129	; 0x800129 <adc_temp+0x1>
 146:	96 95       	lsr	r25
 148:	87 95       	ror	r24
 14a:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <adc_temp+0x1>
 14e:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <adc_temp>
 152:	08 95       	ret

00000154 <USART_init>:
}

/* INIT USART (RS-232) */
void USART_init( unsigned int ubrr ) {
	UBRR0H = (unsigned char)(ubrr>>8);
 154:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRR0L = (unsigned char)ubrr;
 158:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
	UCSR0B = (1 << TXEN0); // Enable receiver, transmitter & RX interrupt
 15c:	88 e0       	ldi	r24, 0x08	; 8
 15e:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
	UCSR0C = (3 << UCSZ00); //asynchronous 8 N 1
 162:	86 e0       	ldi	r24, 0x06	; 6
 164:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
 168:	08 95       	ret

0000016a <USART_tx_string>:
}

void USART_tx_string( char *data ) {
 16a:	cf 93       	push	r28
 16c:	df 93       	push	r29
	while ((*data != '\0')) {
 16e:	fc 01       	movw	r30, r24
 170:	20 81       	ld	r18, Z
 172:	22 23       	and	r18, r18
 174:	69 f0       	breq	.+26     	; 0x190 <USART_tx_string+0x26>
 176:	dc 01       	movw	r26, r24
 178:	11 96       	adiw	r26, 0x01	; 1
		while (!(UCSR0A & (1 <<UDRE0)));
 17a:	e0 ec       	ldi	r30, 0xC0	; 192
 17c:	f0 e0       	ldi	r31, 0x00	; 0
		UDR0 = *data;
 17e:	c6 ec       	ldi	r28, 0xC6	; 198
 180:	d0 e0       	ldi	r29, 0x00	; 0
	UCSR0C = (3 << UCSZ00); //asynchronous 8 N 1
}

void USART_tx_string( char *data ) {
	while ((*data != '\0')) {
		while (!(UCSR0A & (1 <<UDRE0)));
 182:	90 81       	ld	r25, Z
 184:	95 ff       	sbrs	r25, 5
 186:	fd cf       	rjmp	.-6      	; 0x182 <USART_tx_string+0x18>
		UDR0 = *data;
 188:	28 83       	st	Y, r18
	UCSR0B = (1 << TXEN0); // Enable receiver, transmitter & RX interrupt
	UCSR0C = (3 << UCSZ00); //asynchronous 8 N 1
}

void USART_tx_string( char *data ) {
	while ((*data != '\0')) {
 18a:	2d 91       	ld	r18, X+
 18c:	21 11       	cpse	r18, r1
 18e:	f9 cf       	rjmp	.-14     	; 0x182 <USART_tx_string+0x18>
		while (!(UCSR0A & (1 <<UDRE0)));
		UDR0 = *data;
		data++;
	}
}
 190:	df 91       	pop	r29
 192:	cf 91       	pop	r28
 194:	08 95       	ret

00000196 <main>:
volatile unsigned int adc_temp;
char outs[20];

int main(void) {
	
	adc_init(); // Initialize the ADC (Analog / Digital Converter)
 196:	0e 94 53 00 	call	0xa6	; 0xa6 <adc_init>
	USART_init(MYUBRR); // Initialize the USART (RS232 interface)
 19a:	87 e6       	ldi	r24, 0x67	; 103
 19c:	90 e0       	ldi	r25, 0x00	; 0
 19e:	0e 94 aa 00 	call	0x154	; 0x154 <USART_init>
	USART_tx_string("Connected!\r\n"); // we're alive!
 1a2:	80 e0       	ldi	r24, 0x00	; 0
 1a4:	91 e0       	ldi	r25, 0x01	; 1
 1a6:	0e 94 b5 00 	call	0x16a	; 0x16a <USART_tx_string>
 1aa:	2f e7       	ldi	r18, 0x7F	; 127
 1ac:	8a e1       	ldi	r24, 0x1A	; 26
 1ae:	96 e0       	ldi	r25, 0x06	; 6
 1b0:	21 50       	subi	r18, 0x01	; 1
 1b2:	80 40       	sbci	r24, 0x00	; 0
 1b4:	90 40       	sbci	r25, 0x00	; 0
 1b6:	e1 f7       	brne	.-8      	; 0x1b0 <main+0x1a>
 1b8:	00 c0       	rjmp	.+0      	; 0x1ba <main+0x24>
 1ba:	00 00       	nop
	_delay_ms(125); // wait a bit

	sei();
 1bc:	78 94       	sei
 1be:	ff cf       	rjmp	.-2      	; 0x1be <main+0x28>

000001c0 <__vector_13>:
		data++;
	}
}

ISR(TIMER1_OVF_vect)
{
 1c0:	1f 92       	push	r1
 1c2:	0f 92       	push	r0
 1c4:	0f b6       	in	r0, 0x3f	; 63
 1c6:	0f 92       	push	r0
 1c8:	11 24       	eor	r1, r1
 1ca:	2f 93       	push	r18
 1cc:	3f 93       	push	r19
 1ce:	4f 93       	push	r20
 1d0:	5f 93       	push	r21
 1d2:	6f 93       	push	r22
 1d4:	7f 93       	push	r23
 1d6:	8f 93       	push	r24
 1d8:	9f 93       	push	r25
 1da:	af 93       	push	r26
 1dc:	bf 93       	push	r27
 1de:	ef 93       	push	r30
 1e0:	ff 93       	push	r31
	read_adc();		//call the ADC read function
 1e2:	0e 94 6a 00 	call	0xd4	; 0xd4 <read_adc>
	snprintf(outs,sizeof(outs),"%3d\r\n", adc_temp);// print it
 1e6:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <adc_temp>
 1ea:	90 91 29 01 	lds	r25, 0x0129	; 0x800129 <adc_temp+0x1>
 1ee:	9f 93       	push	r25
 1f0:	8f 93       	push	r24
 1f2:	8d e0       	ldi	r24, 0x0D	; 13
 1f4:	91 e0       	ldi	r25, 0x01	; 1
 1f6:	9f 93       	push	r25
 1f8:	8f 93       	push	r24
 1fa:	1f 92       	push	r1
 1fc:	84 e1       	ldi	r24, 0x14	; 20
 1fe:	8f 93       	push	r24
 200:	84 e1       	ldi	r24, 0x14	; 20
 202:	91 e0       	ldi	r25, 0x01	; 1
 204:	9f 93       	push	r25
 206:	8f 93       	push	r24
 208:	0e 94 29 01 	call	0x252	; 0x252 <snprintf>
	USART_tx_string(outs);	//Ouputs a string to the screen
 20c:	84 e1       	ldi	r24, 0x14	; 20
 20e:	91 e0       	ldi	r25, 0x01	; 1
 210:	0e 94 b5 00 	call	0x16a	; 0x16a <USART_tx_string>
	TCNT1 = 49911;			//reset Timer counter
 214:	87 ef       	ldi	r24, 0xF7	; 247
 216:	92 ec       	ldi	r25, 0xC2	; 194
 218:	90 93 85 00 	sts	0x0085, r25	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
 21c:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
}
 220:	8d b7       	in	r24, 0x3d	; 61
 222:	9e b7       	in	r25, 0x3e	; 62
 224:	08 96       	adiw	r24, 0x08	; 8
 226:	0f b6       	in	r0, 0x3f	; 63
 228:	f8 94       	cli
 22a:	9e bf       	out	0x3e, r25	; 62
 22c:	0f be       	out	0x3f, r0	; 63
 22e:	8d bf       	out	0x3d, r24	; 61
 230:	ff 91       	pop	r31
 232:	ef 91       	pop	r30
 234:	bf 91       	pop	r27
 236:	af 91       	pop	r26
 238:	9f 91       	pop	r25
 23a:	8f 91       	pop	r24
 23c:	7f 91       	pop	r23
 23e:	6f 91       	pop	r22
 240:	5f 91       	pop	r21
 242:	4f 91       	pop	r20
 244:	3f 91       	pop	r19
 246:	2f 91       	pop	r18
 248:	0f 90       	pop	r0
 24a:	0f be       	out	0x3f, r0	; 63
 24c:	0f 90       	pop	r0
 24e:	1f 90       	pop	r1
 250:	18 95       	reti

00000252 <snprintf>:
 252:	ae e0       	ldi	r26, 0x0E	; 14
 254:	b0 e0       	ldi	r27, 0x00	; 0
 256:	ef e2       	ldi	r30, 0x2F	; 47
 258:	f1 e0       	ldi	r31, 0x01	; 1
 25a:	0c 94 f8 03 	jmp	0x7f0	; 0x7f0 <__prologue_saves__+0x1c>
 25e:	0d 89       	ldd	r16, Y+21	; 0x15
 260:	1e 89       	ldd	r17, Y+22	; 0x16
 262:	8f 89       	ldd	r24, Y+23	; 0x17
 264:	98 8d       	ldd	r25, Y+24	; 0x18
 266:	26 e0       	ldi	r18, 0x06	; 6
 268:	2c 83       	std	Y+4, r18	; 0x04
 26a:	1a 83       	std	Y+2, r17	; 0x02
 26c:	09 83       	std	Y+1, r16	; 0x01
 26e:	97 ff       	sbrs	r25, 7
 270:	02 c0       	rjmp	.+4      	; 0x276 <snprintf+0x24>
 272:	80 e0       	ldi	r24, 0x00	; 0
 274:	90 e8       	ldi	r25, 0x80	; 128
 276:	01 97       	sbiw	r24, 0x01	; 1
 278:	9e 83       	std	Y+6, r25	; 0x06
 27a:	8d 83       	std	Y+5, r24	; 0x05
 27c:	ae 01       	movw	r20, r28
 27e:	45 5e       	subi	r20, 0xE5	; 229
 280:	5f 4f       	sbci	r21, 0xFF	; 255
 282:	69 8d       	ldd	r22, Y+25	; 0x19
 284:	7a 8d       	ldd	r23, Y+26	; 0x1a
 286:	ce 01       	movw	r24, r28
 288:	01 96       	adiw	r24, 0x01	; 1
 28a:	0e 94 59 01 	call	0x2b2	; 0x2b2 <vfprintf>
 28e:	4d 81       	ldd	r20, Y+5	; 0x05
 290:	5e 81       	ldd	r21, Y+6	; 0x06
 292:	57 fd       	sbrc	r21, 7
 294:	0a c0       	rjmp	.+20     	; 0x2aa <snprintf+0x58>
 296:	2f 81       	ldd	r18, Y+7	; 0x07
 298:	38 85       	ldd	r19, Y+8	; 0x08
 29a:	42 17       	cp	r20, r18
 29c:	53 07       	cpc	r21, r19
 29e:	0c f4       	brge	.+2      	; 0x2a2 <snprintf+0x50>
 2a0:	9a 01       	movw	r18, r20
 2a2:	f8 01       	movw	r30, r16
 2a4:	e2 0f       	add	r30, r18
 2a6:	f3 1f       	adc	r31, r19
 2a8:	10 82       	st	Z, r1
 2aa:	2e 96       	adiw	r28, 0x0e	; 14
 2ac:	e4 e0       	ldi	r30, 0x04	; 4
 2ae:	0c 94 14 04 	jmp	0x828	; 0x828 <__epilogue_restores__+0x1c>

000002b2 <vfprintf>:
 2b2:	ab e0       	ldi	r26, 0x0B	; 11
 2b4:	b0 e0       	ldi	r27, 0x00	; 0
 2b6:	ef e5       	ldi	r30, 0x5F	; 95
 2b8:	f1 e0       	ldi	r31, 0x01	; 1
 2ba:	0c 94 ea 03 	jmp	0x7d4	; 0x7d4 <__prologue_saves__>
 2be:	6c 01       	movw	r12, r24
 2c0:	7b 01       	movw	r14, r22
 2c2:	8a 01       	movw	r16, r20
 2c4:	fc 01       	movw	r30, r24
 2c6:	17 82       	std	Z+7, r1	; 0x07
 2c8:	16 82       	std	Z+6, r1	; 0x06
 2ca:	83 81       	ldd	r24, Z+3	; 0x03
 2cc:	81 ff       	sbrs	r24, 1
 2ce:	cc c1       	rjmp	.+920    	; 0x668 <__LOCK_REGION_LENGTH__+0x268>
 2d0:	ce 01       	movw	r24, r28
 2d2:	01 96       	adiw	r24, 0x01	; 1
 2d4:	3c 01       	movw	r6, r24
 2d6:	f6 01       	movw	r30, r12
 2d8:	93 81       	ldd	r25, Z+3	; 0x03
 2da:	f7 01       	movw	r30, r14
 2dc:	93 fd       	sbrc	r25, 3
 2de:	85 91       	lpm	r24, Z+
 2e0:	93 ff       	sbrs	r25, 3
 2e2:	81 91       	ld	r24, Z+
 2e4:	7f 01       	movw	r14, r30
 2e6:	88 23       	and	r24, r24
 2e8:	09 f4       	brne	.+2      	; 0x2ec <vfprintf+0x3a>
 2ea:	ba c1       	rjmp	.+884    	; 0x660 <__LOCK_REGION_LENGTH__+0x260>
 2ec:	85 32       	cpi	r24, 0x25	; 37
 2ee:	39 f4       	brne	.+14     	; 0x2fe <vfprintf+0x4c>
 2f0:	93 fd       	sbrc	r25, 3
 2f2:	85 91       	lpm	r24, Z+
 2f4:	93 ff       	sbrs	r25, 3
 2f6:	81 91       	ld	r24, Z+
 2f8:	7f 01       	movw	r14, r30
 2fa:	85 32       	cpi	r24, 0x25	; 37
 2fc:	29 f4       	brne	.+10     	; 0x308 <vfprintf+0x56>
 2fe:	b6 01       	movw	r22, r12
 300:	90 e0       	ldi	r25, 0x00	; 0
 302:	0e 94 50 03 	call	0x6a0	; 0x6a0 <fputc>
 306:	e7 cf       	rjmp	.-50     	; 0x2d6 <vfprintf+0x24>
 308:	91 2c       	mov	r9, r1
 30a:	21 2c       	mov	r2, r1
 30c:	31 2c       	mov	r3, r1
 30e:	ff e1       	ldi	r31, 0x1F	; 31
 310:	f3 15       	cp	r31, r3
 312:	d8 f0       	brcs	.+54     	; 0x34a <vfprintf+0x98>
 314:	8b 32       	cpi	r24, 0x2B	; 43
 316:	79 f0       	breq	.+30     	; 0x336 <vfprintf+0x84>
 318:	38 f4       	brcc	.+14     	; 0x328 <vfprintf+0x76>
 31a:	80 32       	cpi	r24, 0x20	; 32
 31c:	79 f0       	breq	.+30     	; 0x33c <vfprintf+0x8a>
 31e:	83 32       	cpi	r24, 0x23	; 35
 320:	a1 f4       	brne	.+40     	; 0x34a <vfprintf+0x98>
 322:	23 2d       	mov	r18, r3
 324:	20 61       	ori	r18, 0x10	; 16
 326:	1d c0       	rjmp	.+58     	; 0x362 <vfprintf+0xb0>
 328:	8d 32       	cpi	r24, 0x2D	; 45
 32a:	61 f0       	breq	.+24     	; 0x344 <vfprintf+0x92>
 32c:	80 33       	cpi	r24, 0x30	; 48
 32e:	69 f4       	brne	.+26     	; 0x34a <vfprintf+0x98>
 330:	23 2d       	mov	r18, r3
 332:	21 60       	ori	r18, 0x01	; 1
 334:	16 c0       	rjmp	.+44     	; 0x362 <vfprintf+0xb0>
 336:	83 2d       	mov	r24, r3
 338:	82 60       	ori	r24, 0x02	; 2
 33a:	38 2e       	mov	r3, r24
 33c:	e3 2d       	mov	r30, r3
 33e:	e4 60       	ori	r30, 0x04	; 4
 340:	3e 2e       	mov	r3, r30
 342:	2a c0       	rjmp	.+84     	; 0x398 <vfprintf+0xe6>
 344:	f3 2d       	mov	r31, r3
 346:	f8 60       	ori	r31, 0x08	; 8
 348:	1d c0       	rjmp	.+58     	; 0x384 <vfprintf+0xd2>
 34a:	37 fc       	sbrc	r3, 7
 34c:	2d c0       	rjmp	.+90     	; 0x3a8 <vfprintf+0xf6>
 34e:	20 ed       	ldi	r18, 0xD0	; 208
 350:	28 0f       	add	r18, r24
 352:	2a 30       	cpi	r18, 0x0A	; 10
 354:	40 f0       	brcs	.+16     	; 0x366 <vfprintf+0xb4>
 356:	8e 32       	cpi	r24, 0x2E	; 46
 358:	b9 f4       	brne	.+46     	; 0x388 <vfprintf+0xd6>
 35a:	36 fc       	sbrc	r3, 6
 35c:	81 c1       	rjmp	.+770    	; 0x660 <__LOCK_REGION_LENGTH__+0x260>
 35e:	23 2d       	mov	r18, r3
 360:	20 64       	ori	r18, 0x40	; 64
 362:	32 2e       	mov	r3, r18
 364:	19 c0       	rjmp	.+50     	; 0x398 <vfprintf+0xe6>
 366:	36 fe       	sbrs	r3, 6
 368:	06 c0       	rjmp	.+12     	; 0x376 <vfprintf+0xc4>
 36a:	8a e0       	ldi	r24, 0x0A	; 10
 36c:	98 9e       	mul	r9, r24
 36e:	20 0d       	add	r18, r0
 370:	11 24       	eor	r1, r1
 372:	92 2e       	mov	r9, r18
 374:	11 c0       	rjmp	.+34     	; 0x398 <vfprintf+0xe6>
 376:	ea e0       	ldi	r30, 0x0A	; 10
 378:	2e 9e       	mul	r2, r30
 37a:	20 0d       	add	r18, r0
 37c:	11 24       	eor	r1, r1
 37e:	22 2e       	mov	r2, r18
 380:	f3 2d       	mov	r31, r3
 382:	f0 62       	ori	r31, 0x20	; 32
 384:	3f 2e       	mov	r3, r31
 386:	08 c0       	rjmp	.+16     	; 0x398 <vfprintf+0xe6>
 388:	8c 36       	cpi	r24, 0x6C	; 108
 38a:	21 f4       	brne	.+8      	; 0x394 <vfprintf+0xe2>
 38c:	83 2d       	mov	r24, r3
 38e:	80 68       	ori	r24, 0x80	; 128
 390:	38 2e       	mov	r3, r24
 392:	02 c0       	rjmp	.+4      	; 0x398 <vfprintf+0xe6>
 394:	88 36       	cpi	r24, 0x68	; 104
 396:	41 f4       	brne	.+16     	; 0x3a8 <vfprintf+0xf6>
 398:	f7 01       	movw	r30, r14
 39a:	93 fd       	sbrc	r25, 3
 39c:	85 91       	lpm	r24, Z+
 39e:	93 ff       	sbrs	r25, 3
 3a0:	81 91       	ld	r24, Z+
 3a2:	7f 01       	movw	r14, r30
 3a4:	81 11       	cpse	r24, r1
 3a6:	b3 cf       	rjmp	.-154    	; 0x30e <vfprintf+0x5c>
 3a8:	98 2f       	mov	r25, r24
 3aa:	9f 7d       	andi	r25, 0xDF	; 223
 3ac:	95 54       	subi	r25, 0x45	; 69
 3ae:	93 30       	cpi	r25, 0x03	; 3
 3b0:	28 f4       	brcc	.+10     	; 0x3bc <vfprintf+0x10a>
 3b2:	0c 5f       	subi	r16, 0xFC	; 252
 3b4:	1f 4f       	sbci	r17, 0xFF	; 255
 3b6:	9f e3       	ldi	r25, 0x3F	; 63
 3b8:	99 83       	std	Y+1, r25	; 0x01
 3ba:	0d c0       	rjmp	.+26     	; 0x3d6 <vfprintf+0x124>
 3bc:	83 36       	cpi	r24, 0x63	; 99
 3be:	31 f0       	breq	.+12     	; 0x3cc <vfprintf+0x11a>
 3c0:	83 37       	cpi	r24, 0x73	; 115
 3c2:	71 f0       	breq	.+28     	; 0x3e0 <vfprintf+0x12e>
 3c4:	83 35       	cpi	r24, 0x53	; 83
 3c6:	09 f0       	breq	.+2      	; 0x3ca <vfprintf+0x118>
 3c8:	59 c0       	rjmp	.+178    	; 0x47c <__LOCK_REGION_LENGTH__+0x7c>
 3ca:	21 c0       	rjmp	.+66     	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
 3cc:	f8 01       	movw	r30, r16
 3ce:	80 81       	ld	r24, Z
 3d0:	89 83       	std	Y+1, r24	; 0x01
 3d2:	0e 5f       	subi	r16, 0xFE	; 254
 3d4:	1f 4f       	sbci	r17, 0xFF	; 255
 3d6:	88 24       	eor	r8, r8
 3d8:	83 94       	inc	r8
 3da:	91 2c       	mov	r9, r1
 3dc:	53 01       	movw	r10, r6
 3de:	13 c0       	rjmp	.+38     	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 3e0:	28 01       	movw	r4, r16
 3e2:	f2 e0       	ldi	r31, 0x02	; 2
 3e4:	4f 0e       	add	r4, r31
 3e6:	51 1c       	adc	r5, r1
 3e8:	f8 01       	movw	r30, r16
 3ea:	a0 80       	ld	r10, Z
 3ec:	b1 80       	ldd	r11, Z+1	; 0x01
 3ee:	36 fe       	sbrs	r3, 6
 3f0:	03 c0       	rjmp	.+6      	; 0x3f8 <vfprintf+0x146>
 3f2:	69 2d       	mov	r22, r9
 3f4:	70 e0       	ldi	r23, 0x00	; 0
 3f6:	02 c0       	rjmp	.+4      	; 0x3fc <vfprintf+0x14a>
 3f8:	6f ef       	ldi	r22, 0xFF	; 255
 3fa:	7f ef       	ldi	r23, 0xFF	; 255
 3fc:	c5 01       	movw	r24, r10
 3fe:	0e 94 45 03 	call	0x68a	; 0x68a <strnlen>
 402:	4c 01       	movw	r8, r24
 404:	82 01       	movw	r16, r4
 406:	f3 2d       	mov	r31, r3
 408:	ff 77       	andi	r31, 0x7F	; 127
 40a:	3f 2e       	mov	r3, r31
 40c:	16 c0       	rjmp	.+44     	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 40e:	28 01       	movw	r4, r16
 410:	22 e0       	ldi	r18, 0x02	; 2
 412:	42 0e       	add	r4, r18
 414:	51 1c       	adc	r5, r1
 416:	f8 01       	movw	r30, r16
 418:	a0 80       	ld	r10, Z
 41a:	b1 80       	ldd	r11, Z+1	; 0x01
 41c:	36 fe       	sbrs	r3, 6
 41e:	03 c0       	rjmp	.+6      	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
 420:	69 2d       	mov	r22, r9
 422:	70 e0       	ldi	r23, 0x00	; 0
 424:	02 c0       	rjmp	.+4      	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 426:	6f ef       	ldi	r22, 0xFF	; 255
 428:	7f ef       	ldi	r23, 0xFF	; 255
 42a:	c5 01       	movw	r24, r10
 42c:	0e 94 3a 03 	call	0x674	; 0x674 <strnlen_P>
 430:	4c 01       	movw	r8, r24
 432:	f3 2d       	mov	r31, r3
 434:	f0 68       	ori	r31, 0x80	; 128
 436:	3f 2e       	mov	r3, r31
 438:	82 01       	movw	r16, r4
 43a:	33 fc       	sbrc	r3, 3
 43c:	1b c0       	rjmp	.+54     	; 0x474 <__LOCK_REGION_LENGTH__+0x74>
 43e:	82 2d       	mov	r24, r2
 440:	90 e0       	ldi	r25, 0x00	; 0
 442:	88 16       	cp	r8, r24
 444:	99 06       	cpc	r9, r25
 446:	b0 f4       	brcc	.+44     	; 0x474 <__LOCK_REGION_LENGTH__+0x74>
 448:	b6 01       	movw	r22, r12
 44a:	80 e2       	ldi	r24, 0x20	; 32
 44c:	90 e0       	ldi	r25, 0x00	; 0
 44e:	0e 94 50 03 	call	0x6a0	; 0x6a0 <fputc>
 452:	2a 94       	dec	r2
 454:	f4 cf       	rjmp	.-24     	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
 456:	f5 01       	movw	r30, r10
 458:	37 fc       	sbrc	r3, 7
 45a:	85 91       	lpm	r24, Z+
 45c:	37 fe       	sbrs	r3, 7
 45e:	81 91       	ld	r24, Z+
 460:	5f 01       	movw	r10, r30
 462:	b6 01       	movw	r22, r12
 464:	90 e0       	ldi	r25, 0x00	; 0
 466:	0e 94 50 03 	call	0x6a0	; 0x6a0 <fputc>
 46a:	21 10       	cpse	r2, r1
 46c:	2a 94       	dec	r2
 46e:	21 e0       	ldi	r18, 0x01	; 1
 470:	82 1a       	sub	r8, r18
 472:	91 08       	sbc	r9, r1
 474:	81 14       	cp	r8, r1
 476:	91 04       	cpc	r9, r1
 478:	71 f7       	brne	.-36     	; 0x456 <__LOCK_REGION_LENGTH__+0x56>
 47a:	e8 c0       	rjmp	.+464    	; 0x64c <__LOCK_REGION_LENGTH__+0x24c>
 47c:	84 36       	cpi	r24, 0x64	; 100
 47e:	11 f0       	breq	.+4      	; 0x484 <__LOCK_REGION_LENGTH__+0x84>
 480:	89 36       	cpi	r24, 0x69	; 105
 482:	41 f5       	brne	.+80     	; 0x4d4 <__LOCK_REGION_LENGTH__+0xd4>
 484:	f8 01       	movw	r30, r16
 486:	37 fe       	sbrs	r3, 7
 488:	07 c0       	rjmp	.+14     	; 0x498 <__LOCK_REGION_LENGTH__+0x98>
 48a:	60 81       	ld	r22, Z
 48c:	71 81       	ldd	r23, Z+1	; 0x01
 48e:	82 81       	ldd	r24, Z+2	; 0x02
 490:	93 81       	ldd	r25, Z+3	; 0x03
 492:	0c 5f       	subi	r16, 0xFC	; 252
 494:	1f 4f       	sbci	r17, 0xFF	; 255
 496:	08 c0       	rjmp	.+16     	; 0x4a8 <__LOCK_REGION_LENGTH__+0xa8>
 498:	60 81       	ld	r22, Z
 49a:	71 81       	ldd	r23, Z+1	; 0x01
 49c:	07 2e       	mov	r0, r23
 49e:	00 0c       	add	r0, r0
 4a0:	88 0b       	sbc	r24, r24
 4a2:	99 0b       	sbc	r25, r25
 4a4:	0e 5f       	subi	r16, 0xFE	; 254
 4a6:	1f 4f       	sbci	r17, 0xFF	; 255
 4a8:	f3 2d       	mov	r31, r3
 4aa:	ff 76       	andi	r31, 0x6F	; 111
 4ac:	3f 2e       	mov	r3, r31
 4ae:	97 ff       	sbrs	r25, 7
 4b0:	09 c0       	rjmp	.+18     	; 0x4c4 <__LOCK_REGION_LENGTH__+0xc4>
 4b2:	90 95       	com	r25
 4b4:	80 95       	com	r24
 4b6:	70 95       	com	r23
 4b8:	61 95       	neg	r22
 4ba:	7f 4f       	sbci	r23, 0xFF	; 255
 4bc:	8f 4f       	sbci	r24, 0xFF	; 255
 4be:	9f 4f       	sbci	r25, 0xFF	; 255
 4c0:	f0 68       	ori	r31, 0x80	; 128
 4c2:	3f 2e       	mov	r3, r31
 4c4:	2a e0       	ldi	r18, 0x0A	; 10
 4c6:	30 e0       	ldi	r19, 0x00	; 0
 4c8:	a3 01       	movw	r20, r6
 4ca:	0e 94 8c 03 	call	0x718	; 0x718 <__ultoa_invert>
 4ce:	88 2e       	mov	r8, r24
 4d0:	86 18       	sub	r8, r6
 4d2:	45 c0       	rjmp	.+138    	; 0x55e <__LOCK_REGION_LENGTH__+0x15e>
 4d4:	85 37       	cpi	r24, 0x75	; 117
 4d6:	31 f4       	brne	.+12     	; 0x4e4 <__LOCK_REGION_LENGTH__+0xe4>
 4d8:	23 2d       	mov	r18, r3
 4da:	2f 7e       	andi	r18, 0xEF	; 239
 4dc:	b2 2e       	mov	r11, r18
 4de:	2a e0       	ldi	r18, 0x0A	; 10
 4e0:	30 e0       	ldi	r19, 0x00	; 0
 4e2:	25 c0       	rjmp	.+74     	; 0x52e <__LOCK_REGION_LENGTH__+0x12e>
 4e4:	93 2d       	mov	r25, r3
 4e6:	99 7f       	andi	r25, 0xF9	; 249
 4e8:	b9 2e       	mov	r11, r25
 4ea:	8f 36       	cpi	r24, 0x6F	; 111
 4ec:	c1 f0       	breq	.+48     	; 0x51e <__LOCK_REGION_LENGTH__+0x11e>
 4ee:	18 f4       	brcc	.+6      	; 0x4f6 <__LOCK_REGION_LENGTH__+0xf6>
 4f0:	88 35       	cpi	r24, 0x58	; 88
 4f2:	79 f0       	breq	.+30     	; 0x512 <__LOCK_REGION_LENGTH__+0x112>
 4f4:	b5 c0       	rjmp	.+362    	; 0x660 <__LOCK_REGION_LENGTH__+0x260>
 4f6:	80 37       	cpi	r24, 0x70	; 112
 4f8:	19 f0       	breq	.+6      	; 0x500 <__LOCK_REGION_LENGTH__+0x100>
 4fa:	88 37       	cpi	r24, 0x78	; 120
 4fc:	21 f0       	breq	.+8      	; 0x506 <__LOCK_REGION_LENGTH__+0x106>
 4fe:	b0 c0       	rjmp	.+352    	; 0x660 <__LOCK_REGION_LENGTH__+0x260>
 500:	e9 2f       	mov	r30, r25
 502:	e0 61       	ori	r30, 0x10	; 16
 504:	be 2e       	mov	r11, r30
 506:	b4 fe       	sbrs	r11, 4
 508:	0d c0       	rjmp	.+26     	; 0x524 <__LOCK_REGION_LENGTH__+0x124>
 50a:	fb 2d       	mov	r31, r11
 50c:	f4 60       	ori	r31, 0x04	; 4
 50e:	bf 2e       	mov	r11, r31
 510:	09 c0       	rjmp	.+18     	; 0x524 <__LOCK_REGION_LENGTH__+0x124>
 512:	34 fe       	sbrs	r3, 4
 514:	0a c0       	rjmp	.+20     	; 0x52a <__LOCK_REGION_LENGTH__+0x12a>
 516:	29 2f       	mov	r18, r25
 518:	26 60       	ori	r18, 0x06	; 6
 51a:	b2 2e       	mov	r11, r18
 51c:	06 c0       	rjmp	.+12     	; 0x52a <__LOCK_REGION_LENGTH__+0x12a>
 51e:	28 e0       	ldi	r18, 0x08	; 8
 520:	30 e0       	ldi	r19, 0x00	; 0
 522:	05 c0       	rjmp	.+10     	; 0x52e <__LOCK_REGION_LENGTH__+0x12e>
 524:	20 e1       	ldi	r18, 0x10	; 16
 526:	30 e0       	ldi	r19, 0x00	; 0
 528:	02 c0       	rjmp	.+4      	; 0x52e <__LOCK_REGION_LENGTH__+0x12e>
 52a:	20 e1       	ldi	r18, 0x10	; 16
 52c:	32 e0       	ldi	r19, 0x02	; 2
 52e:	f8 01       	movw	r30, r16
 530:	b7 fe       	sbrs	r11, 7
 532:	07 c0       	rjmp	.+14     	; 0x542 <__LOCK_REGION_LENGTH__+0x142>
 534:	60 81       	ld	r22, Z
 536:	71 81       	ldd	r23, Z+1	; 0x01
 538:	82 81       	ldd	r24, Z+2	; 0x02
 53a:	93 81       	ldd	r25, Z+3	; 0x03
 53c:	0c 5f       	subi	r16, 0xFC	; 252
 53e:	1f 4f       	sbci	r17, 0xFF	; 255
 540:	06 c0       	rjmp	.+12     	; 0x54e <__LOCK_REGION_LENGTH__+0x14e>
 542:	60 81       	ld	r22, Z
 544:	71 81       	ldd	r23, Z+1	; 0x01
 546:	80 e0       	ldi	r24, 0x00	; 0
 548:	90 e0       	ldi	r25, 0x00	; 0
 54a:	0e 5f       	subi	r16, 0xFE	; 254
 54c:	1f 4f       	sbci	r17, 0xFF	; 255
 54e:	a3 01       	movw	r20, r6
 550:	0e 94 8c 03 	call	0x718	; 0x718 <__ultoa_invert>
 554:	88 2e       	mov	r8, r24
 556:	86 18       	sub	r8, r6
 558:	fb 2d       	mov	r31, r11
 55a:	ff 77       	andi	r31, 0x7F	; 127
 55c:	3f 2e       	mov	r3, r31
 55e:	36 fe       	sbrs	r3, 6
 560:	0d c0       	rjmp	.+26     	; 0x57c <__LOCK_REGION_LENGTH__+0x17c>
 562:	23 2d       	mov	r18, r3
 564:	2e 7f       	andi	r18, 0xFE	; 254
 566:	a2 2e       	mov	r10, r18
 568:	89 14       	cp	r8, r9
 56a:	58 f4       	brcc	.+22     	; 0x582 <__LOCK_REGION_LENGTH__+0x182>
 56c:	34 fe       	sbrs	r3, 4
 56e:	0b c0       	rjmp	.+22     	; 0x586 <__LOCK_REGION_LENGTH__+0x186>
 570:	32 fc       	sbrc	r3, 2
 572:	09 c0       	rjmp	.+18     	; 0x586 <__LOCK_REGION_LENGTH__+0x186>
 574:	83 2d       	mov	r24, r3
 576:	8e 7e       	andi	r24, 0xEE	; 238
 578:	a8 2e       	mov	r10, r24
 57a:	05 c0       	rjmp	.+10     	; 0x586 <__LOCK_REGION_LENGTH__+0x186>
 57c:	b8 2c       	mov	r11, r8
 57e:	a3 2c       	mov	r10, r3
 580:	03 c0       	rjmp	.+6      	; 0x588 <__LOCK_REGION_LENGTH__+0x188>
 582:	b8 2c       	mov	r11, r8
 584:	01 c0       	rjmp	.+2      	; 0x588 <__LOCK_REGION_LENGTH__+0x188>
 586:	b9 2c       	mov	r11, r9
 588:	a4 fe       	sbrs	r10, 4
 58a:	0f c0       	rjmp	.+30     	; 0x5aa <__LOCK_REGION_LENGTH__+0x1aa>
 58c:	fe 01       	movw	r30, r28
 58e:	e8 0d       	add	r30, r8
 590:	f1 1d       	adc	r31, r1
 592:	80 81       	ld	r24, Z
 594:	80 33       	cpi	r24, 0x30	; 48
 596:	21 f4       	brne	.+8      	; 0x5a0 <__LOCK_REGION_LENGTH__+0x1a0>
 598:	9a 2d       	mov	r25, r10
 59a:	99 7e       	andi	r25, 0xE9	; 233
 59c:	a9 2e       	mov	r10, r25
 59e:	09 c0       	rjmp	.+18     	; 0x5b2 <__LOCK_REGION_LENGTH__+0x1b2>
 5a0:	a2 fe       	sbrs	r10, 2
 5a2:	06 c0       	rjmp	.+12     	; 0x5b0 <__LOCK_REGION_LENGTH__+0x1b0>
 5a4:	b3 94       	inc	r11
 5a6:	b3 94       	inc	r11
 5a8:	04 c0       	rjmp	.+8      	; 0x5b2 <__LOCK_REGION_LENGTH__+0x1b2>
 5aa:	8a 2d       	mov	r24, r10
 5ac:	86 78       	andi	r24, 0x86	; 134
 5ae:	09 f0       	breq	.+2      	; 0x5b2 <__LOCK_REGION_LENGTH__+0x1b2>
 5b0:	b3 94       	inc	r11
 5b2:	a3 fc       	sbrc	r10, 3
 5b4:	11 c0       	rjmp	.+34     	; 0x5d8 <__LOCK_REGION_LENGTH__+0x1d8>
 5b6:	a0 fe       	sbrs	r10, 0
 5b8:	06 c0       	rjmp	.+12     	; 0x5c6 <__LOCK_REGION_LENGTH__+0x1c6>
 5ba:	b2 14       	cp	r11, r2
 5bc:	88 f4       	brcc	.+34     	; 0x5e0 <__LOCK_REGION_LENGTH__+0x1e0>
 5be:	28 0c       	add	r2, r8
 5c0:	92 2c       	mov	r9, r2
 5c2:	9b 18       	sub	r9, r11
 5c4:	0e c0       	rjmp	.+28     	; 0x5e2 <__LOCK_REGION_LENGTH__+0x1e2>
 5c6:	b2 14       	cp	r11, r2
 5c8:	60 f4       	brcc	.+24     	; 0x5e2 <__LOCK_REGION_LENGTH__+0x1e2>
 5ca:	b6 01       	movw	r22, r12
 5cc:	80 e2       	ldi	r24, 0x20	; 32
 5ce:	90 e0       	ldi	r25, 0x00	; 0
 5d0:	0e 94 50 03 	call	0x6a0	; 0x6a0 <fputc>
 5d4:	b3 94       	inc	r11
 5d6:	f7 cf       	rjmp	.-18     	; 0x5c6 <__LOCK_REGION_LENGTH__+0x1c6>
 5d8:	b2 14       	cp	r11, r2
 5da:	18 f4       	brcc	.+6      	; 0x5e2 <__LOCK_REGION_LENGTH__+0x1e2>
 5dc:	2b 18       	sub	r2, r11
 5de:	02 c0       	rjmp	.+4      	; 0x5e4 <__LOCK_REGION_LENGTH__+0x1e4>
 5e0:	98 2c       	mov	r9, r8
 5e2:	21 2c       	mov	r2, r1
 5e4:	a4 fe       	sbrs	r10, 4
 5e6:	10 c0       	rjmp	.+32     	; 0x608 <__LOCK_REGION_LENGTH__+0x208>
 5e8:	b6 01       	movw	r22, r12
 5ea:	80 e3       	ldi	r24, 0x30	; 48
 5ec:	90 e0       	ldi	r25, 0x00	; 0
 5ee:	0e 94 50 03 	call	0x6a0	; 0x6a0 <fputc>
 5f2:	a2 fe       	sbrs	r10, 2
 5f4:	17 c0       	rjmp	.+46     	; 0x624 <__LOCK_REGION_LENGTH__+0x224>
 5f6:	a1 fc       	sbrc	r10, 1
 5f8:	03 c0       	rjmp	.+6      	; 0x600 <__LOCK_REGION_LENGTH__+0x200>
 5fa:	88 e7       	ldi	r24, 0x78	; 120
 5fc:	90 e0       	ldi	r25, 0x00	; 0
 5fe:	02 c0       	rjmp	.+4      	; 0x604 <__LOCK_REGION_LENGTH__+0x204>
 600:	88 e5       	ldi	r24, 0x58	; 88
 602:	90 e0       	ldi	r25, 0x00	; 0
 604:	b6 01       	movw	r22, r12
 606:	0c c0       	rjmp	.+24     	; 0x620 <__LOCK_REGION_LENGTH__+0x220>
 608:	8a 2d       	mov	r24, r10
 60a:	86 78       	andi	r24, 0x86	; 134
 60c:	59 f0       	breq	.+22     	; 0x624 <__LOCK_REGION_LENGTH__+0x224>
 60e:	a1 fe       	sbrs	r10, 1
 610:	02 c0       	rjmp	.+4      	; 0x616 <__LOCK_REGION_LENGTH__+0x216>
 612:	8b e2       	ldi	r24, 0x2B	; 43
 614:	01 c0       	rjmp	.+2      	; 0x618 <__LOCK_REGION_LENGTH__+0x218>
 616:	80 e2       	ldi	r24, 0x20	; 32
 618:	a7 fc       	sbrc	r10, 7
 61a:	8d e2       	ldi	r24, 0x2D	; 45
 61c:	b6 01       	movw	r22, r12
 61e:	90 e0       	ldi	r25, 0x00	; 0
 620:	0e 94 50 03 	call	0x6a0	; 0x6a0 <fputc>
 624:	89 14       	cp	r8, r9
 626:	38 f4       	brcc	.+14     	; 0x636 <__LOCK_REGION_LENGTH__+0x236>
 628:	b6 01       	movw	r22, r12
 62a:	80 e3       	ldi	r24, 0x30	; 48
 62c:	90 e0       	ldi	r25, 0x00	; 0
 62e:	0e 94 50 03 	call	0x6a0	; 0x6a0 <fputc>
 632:	9a 94       	dec	r9
 634:	f7 cf       	rjmp	.-18     	; 0x624 <__LOCK_REGION_LENGTH__+0x224>
 636:	8a 94       	dec	r8
 638:	f3 01       	movw	r30, r6
 63a:	e8 0d       	add	r30, r8
 63c:	f1 1d       	adc	r31, r1
 63e:	80 81       	ld	r24, Z
 640:	b6 01       	movw	r22, r12
 642:	90 e0       	ldi	r25, 0x00	; 0
 644:	0e 94 50 03 	call	0x6a0	; 0x6a0 <fputc>
 648:	81 10       	cpse	r8, r1
 64a:	f5 cf       	rjmp	.-22     	; 0x636 <__LOCK_REGION_LENGTH__+0x236>
 64c:	22 20       	and	r2, r2
 64e:	09 f4       	brne	.+2      	; 0x652 <__LOCK_REGION_LENGTH__+0x252>
 650:	42 ce       	rjmp	.-892    	; 0x2d6 <vfprintf+0x24>
 652:	b6 01       	movw	r22, r12
 654:	80 e2       	ldi	r24, 0x20	; 32
 656:	90 e0       	ldi	r25, 0x00	; 0
 658:	0e 94 50 03 	call	0x6a0	; 0x6a0 <fputc>
 65c:	2a 94       	dec	r2
 65e:	f6 cf       	rjmp	.-20     	; 0x64c <__LOCK_REGION_LENGTH__+0x24c>
 660:	f6 01       	movw	r30, r12
 662:	86 81       	ldd	r24, Z+6	; 0x06
 664:	97 81       	ldd	r25, Z+7	; 0x07
 666:	02 c0       	rjmp	.+4      	; 0x66c <__LOCK_REGION_LENGTH__+0x26c>
 668:	8f ef       	ldi	r24, 0xFF	; 255
 66a:	9f ef       	ldi	r25, 0xFF	; 255
 66c:	2b 96       	adiw	r28, 0x0b	; 11
 66e:	e2 e1       	ldi	r30, 0x12	; 18
 670:	0c 94 06 04 	jmp	0x80c	; 0x80c <__epilogue_restores__>

00000674 <strnlen_P>:
 674:	fc 01       	movw	r30, r24
 676:	05 90       	lpm	r0, Z+
 678:	61 50       	subi	r22, 0x01	; 1
 67a:	70 40       	sbci	r23, 0x00	; 0
 67c:	01 10       	cpse	r0, r1
 67e:	d8 f7       	brcc	.-10     	; 0x676 <strnlen_P+0x2>
 680:	80 95       	com	r24
 682:	90 95       	com	r25
 684:	8e 0f       	add	r24, r30
 686:	9f 1f       	adc	r25, r31
 688:	08 95       	ret

0000068a <strnlen>:
 68a:	fc 01       	movw	r30, r24
 68c:	61 50       	subi	r22, 0x01	; 1
 68e:	70 40       	sbci	r23, 0x00	; 0
 690:	01 90       	ld	r0, Z+
 692:	01 10       	cpse	r0, r1
 694:	d8 f7       	brcc	.-10     	; 0x68c <strnlen+0x2>
 696:	80 95       	com	r24
 698:	90 95       	com	r25
 69a:	8e 0f       	add	r24, r30
 69c:	9f 1f       	adc	r25, r31
 69e:	08 95       	ret

000006a0 <fputc>:
 6a0:	0f 93       	push	r16
 6a2:	1f 93       	push	r17
 6a4:	cf 93       	push	r28
 6a6:	df 93       	push	r29
 6a8:	fb 01       	movw	r30, r22
 6aa:	23 81       	ldd	r18, Z+3	; 0x03
 6ac:	21 fd       	sbrc	r18, 1
 6ae:	03 c0       	rjmp	.+6      	; 0x6b6 <fputc+0x16>
 6b0:	8f ef       	ldi	r24, 0xFF	; 255
 6b2:	9f ef       	ldi	r25, 0xFF	; 255
 6b4:	2c c0       	rjmp	.+88     	; 0x70e <fputc+0x6e>
 6b6:	22 ff       	sbrs	r18, 2
 6b8:	16 c0       	rjmp	.+44     	; 0x6e6 <fputc+0x46>
 6ba:	46 81       	ldd	r20, Z+6	; 0x06
 6bc:	57 81       	ldd	r21, Z+7	; 0x07
 6be:	24 81       	ldd	r18, Z+4	; 0x04
 6c0:	35 81       	ldd	r19, Z+5	; 0x05
 6c2:	42 17       	cp	r20, r18
 6c4:	53 07       	cpc	r21, r19
 6c6:	44 f4       	brge	.+16     	; 0x6d8 <fputc+0x38>
 6c8:	a0 81       	ld	r26, Z
 6ca:	b1 81       	ldd	r27, Z+1	; 0x01
 6cc:	9d 01       	movw	r18, r26
 6ce:	2f 5f       	subi	r18, 0xFF	; 255
 6d0:	3f 4f       	sbci	r19, 0xFF	; 255
 6d2:	31 83       	std	Z+1, r19	; 0x01
 6d4:	20 83       	st	Z, r18
 6d6:	8c 93       	st	X, r24
 6d8:	26 81       	ldd	r18, Z+6	; 0x06
 6da:	37 81       	ldd	r19, Z+7	; 0x07
 6dc:	2f 5f       	subi	r18, 0xFF	; 255
 6de:	3f 4f       	sbci	r19, 0xFF	; 255
 6e0:	37 83       	std	Z+7, r19	; 0x07
 6e2:	26 83       	std	Z+6, r18	; 0x06
 6e4:	14 c0       	rjmp	.+40     	; 0x70e <fputc+0x6e>
 6e6:	8b 01       	movw	r16, r22
 6e8:	ec 01       	movw	r28, r24
 6ea:	fb 01       	movw	r30, r22
 6ec:	00 84       	ldd	r0, Z+8	; 0x08
 6ee:	f1 85       	ldd	r31, Z+9	; 0x09
 6f0:	e0 2d       	mov	r30, r0
 6f2:	09 95       	icall
 6f4:	89 2b       	or	r24, r25
 6f6:	e1 f6       	brne	.-72     	; 0x6b0 <fputc+0x10>
 6f8:	d8 01       	movw	r26, r16
 6fa:	16 96       	adiw	r26, 0x06	; 6
 6fc:	8d 91       	ld	r24, X+
 6fe:	9c 91       	ld	r25, X
 700:	17 97       	sbiw	r26, 0x07	; 7
 702:	01 96       	adiw	r24, 0x01	; 1
 704:	17 96       	adiw	r26, 0x07	; 7
 706:	9c 93       	st	X, r25
 708:	8e 93       	st	-X, r24
 70a:	16 97       	sbiw	r26, 0x06	; 6
 70c:	ce 01       	movw	r24, r28
 70e:	df 91       	pop	r29
 710:	cf 91       	pop	r28
 712:	1f 91       	pop	r17
 714:	0f 91       	pop	r16
 716:	08 95       	ret

00000718 <__ultoa_invert>:
 718:	fa 01       	movw	r30, r20
 71a:	aa 27       	eor	r26, r26
 71c:	28 30       	cpi	r18, 0x08	; 8
 71e:	51 f1       	breq	.+84     	; 0x774 <__ultoa_invert+0x5c>
 720:	20 31       	cpi	r18, 0x10	; 16
 722:	81 f1       	breq	.+96     	; 0x784 <__ultoa_invert+0x6c>
 724:	e8 94       	clt
 726:	6f 93       	push	r22
 728:	6e 7f       	andi	r22, 0xFE	; 254
 72a:	6e 5f       	subi	r22, 0xFE	; 254
 72c:	7f 4f       	sbci	r23, 0xFF	; 255
 72e:	8f 4f       	sbci	r24, 0xFF	; 255
 730:	9f 4f       	sbci	r25, 0xFF	; 255
 732:	af 4f       	sbci	r26, 0xFF	; 255
 734:	b1 e0       	ldi	r27, 0x01	; 1
 736:	3e d0       	rcall	.+124    	; 0x7b4 <__ultoa_invert+0x9c>
 738:	b4 e0       	ldi	r27, 0x04	; 4
 73a:	3c d0       	rcall	.+120    	; 0x7b4 <__ultoa_invert+0x9c>
 73c:	67 0f       	add	r22, r23
 73e:	78 1f       	adc	r23, r24
 740:	89 1f       	adc	r24, r25
 742:	9a 1f       	adc	r25, r26
 744:	a1 1d       	adc	r26, r1
 746:	68 0f       	add	r22, r24
 748:	79 1f       	adc	r23, r25
 74a:	8a 1f       	adc	r24, r26
 74c:	91 1d       	adc	r25, r1
 74e:	a1 1d       	adc	r26, r1
 750:	6a 0f       	add	r22, r26
 752:	71 1d       	adc	r23, r1
 754:	81 1d       	adc	r24, r1
 756:	91 1d       	adc	r25, r1
 758:	a1 1d       	adc	r26, r1
 75a:	20 d0       	rcall	.+64     	; 0x79c <__ultoa_invert+0x84>
 75c:	09 f4       	brne	.+2      	; 0x760 <__ultoa_invert+0x48>
 75e:	68 94       	set
 760:	3f 91       	pop	r19
 762:	2a e0       	ldi	r18, 0x0A	; 10
 764:	26 9f       	mul	r18, r22
 766:	11 24       	eor	r1, r1
 768:	30 19       	sub	r19, r0
 76a:	30 5d       	subi	r19, 0xD0	; 208
 76c:	31 93       	st	Z+, r19
 76e:	de f6       	brtc	.-74     	; 0x726 <__ultoa_invert+0xe>
 770:	cf 01       	movw	r24, r30
 772:	08 95       	ret
 774:	46 2f       	mov	r20, r22
 776:	47 70       	andi	r20, 0x07	; 7
 778:	40 5d       	subi	r20, 0xD0	; 208
 77a:	41 93       	st	Z+, r20
 77c:	b3 e0       	ldi	r27, 0x03	; 3
 77e:	0f d0       	rcall	.+30     	; 0x79e <__ultoa_invert+0x86>
 780:	c9 f7       	brne	.-14     	; 0x774 <__ultoa_invert+0x5c>
 782:	f6 cf       	rjmp	.-20     	; 0x770 <__ultoa_invert+0x58>
 784:	46 2f       	mov	r20, r22
 786:	4f 70       	andi	r20, 0x0F	; 15
 788:	40 5d       	subi	r20, 0xD0	; 208
 78a:	4a 33       	cpi	r20, 0x3A	; 58
 78c:	18 f0       	brcs	.+6      	; 0x794 <__ultoa_invert+0x7c>
 78e:	49 5d       	subi	r20, 0xD9	; 217
 790:	31 fd       	sbrc	r19, 1
 792:	40 52       	subi	r20, 0x20	; 32
 794:	41 93       	st	Z+, r20
 796:	02 d0       	rcall	.+4      	; 0x79c <__ultoa_invert+0x84>
 798:	a9 f7       	brne	.-22     	; 0x784 <__ultoa_invert+0x6c>
 79a:	ea cf       	rjmp	.-44     	; 0x770 <__ultoa_invert+0x58>
 79c:	b4 e0       	ldi	r27, 0x04	; 4
 79e:	a6 95       	lsr	r26
 7a0:	97 95       	ror	r25
 7a2:	87 95       	ror	r24
 7a4:	77 95       	ror	r23
 7a6:	67 95       	ror	r22
 7a8:	ba 95       	dec	r27
 7aa:	c9 f7       	brne	.-14     	; 0x79e <__ultoa_invert+0x86>
 7ac:	00 97       	sbiw	r24, 0x00	; 0
 7ae:	61 05       	cpc	r22, r1
 7b0:	71 05       	cpc	r23, r1
 7b2:	08 95       	ret
 7b4:	9b 01       	movw	r18, r22
 7b6:	ac 01       	movw	r20, r24
 7b8:	0a 2e       	mov	r0, r26
 7ba:	06 94       	lsr	r0
 7bc:	57 95       	ror	r21
 7be:	47 95       	ror	r20
 7c0:	37 95       	ror	r19
 7c2:	27 95       	ror	r18
 7c4:	ba 95       	dec	r27
 7c6:	c9 f7       	brne	.-14     	; 0x7ba <__ultoa_invert+0xa2>
 7c8:	62 0f       	add	r22, r18
 7ca:	73 1f       	adc	r23, r19
 7cc:	84 1f       	adc	r24, r20
 7ce:	95 1f       	adc	r25, r21
 7d0:	a0 1d       	adc	r26, r0
 7d2:	08 95       	ret

000007d4 <__prologue_saves__>:
 7d4:	2f 92       	push	r2
 7d6:	3f 92       	push	r3
 7d8:	4f 92       	push	r4
 7da:	5f 92       	push	r5
 7dc:	6f 92       	push	r6
 7de:	7f 92       	push	r7
 7e0:	8f 92       	push	r8
 7e2:	9f 92       	push	r9
 7e4:	af 92       	push	r10
 7e6:	bf 92       	push	r11
 7e8:	cf 92       	push	r12
 7ea:	df 92       	push	r13
 7ec:	ef 92       	push	r14
 7ee:	ff 92       	push	r15
 7f0:	0f 93       	push	r16
 7f2:	1f 93       	push	r17
 7f4:	cf 93       	push	r28
 7f6:	df 93       	push	r29
 7f8:	cd b7       	in	r28, 0x3d	; 61
 7fa:	de b7       	in	r29, 0x3e	; 62
 7fc:	ca 1b       	sub	r28, r26
 7fe:	db 0b       	sbc	r29, r27
 800:	0f b6       	in	r0, 0x3f	; 63
 802:	f8 94       	cli
 804:	de bf       	out	0x3e, r29	; 62
 806:	0f be       	out	0x3f, r0	; 63
 808:	cd bf       	out	0x3d, r28	; 61
 80a:	09 94       	ijmp

0000080c <__epilogue_restores__>:
 80c:	2a 88       	ldd	r2, Y+18	; 0x12
 80e:	39 88       	ldd	r3, Y+17	; 0x11
 810:	48 88       	ldd	r4, Y+16	; 0x10
 812:	5f 84       	ldd	r5, Y+15	; 0x0f
 814:	6e 84       	ldd	r6, Y+14	; 0x0e
 816:	7d 84       	ldd	r7, Y+13	; 0x0d
 818:	8c 84       	ldd	r8, Y+12	; 0x0c
 81a:	9b 84       	ldd	r9, Y+11	; 0x0b
 81c:	aa 84       	ldd	r10, Y+10	; 0x0a
 81e:	b9 84       	ldd	r11, Y+9	; 0x09
 820:	c8 84       	ldd	r12, Y+8	; 0x08
 822:	df 80       	ldd	r13, Y+7	; 0x07
 824:	ee 80       	ldd	r14, Y+6	; 0x06
 826:	fd 80       	ldd	r15, Y+5	; 0x05
 828:	0c 81       	ldd	r16, Y+4	; 0x04
 82a:	1b 81       	ldd	r17, Y+3	; 0x03
 82c:	aa 81       	ldd	r26, Y+2	; 0x02
 82e:	b9 81       	ldd	r27, Y+1	; 0x01
 830:	ce 0f       	add	r28, r30
 832:	d1 1d       	adc	r29, r1
 834:	0f b6       	in	r0, 0x3f	; 63
 836:	f8 94       	cli
 838:	de bf       	out	0x3e, r29	; 62
 83a:	0f be       	out	0x3f, r0	; 63
 83c:	cd bf       	out	0x3d, r28	; 61
 83e:	ed 01       	movw	r28, r26
 840:	08 95       	ret

00000842 <_exit>:
 842:	f8 94       	cli

00000844 <__stop_program>:
 844:	ff cf       	rjmp	.-2      	; 0x844 <__stop_program>
