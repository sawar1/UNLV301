
GccDA4BT2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000001ae  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000015a  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000001ae  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000001e0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  00000220  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000687  00000000  00000000  00000240  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000005f8  00000000  00000000  000008c7  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000232  00000000  00000000  00000ebf  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  000010f4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000338  00000000  00000000  00001118  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000010  00000000  00000000  00001450  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 40 00 	call	0x80	; 0x80 <main>
  78:	0c 94 ab 00 	jmp	0x156	; 0x156 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <main>:


int main(void)
{
	// initialize ADC
	DDRC = 0;			// Set PORTC as input for adc
  80:	17 b8       	out	0x07, r1	; 7
	DIDR0 = 0x1;		// Disable digital input on ADC0 pin
  82:	81 e0       	ldi	r24, 0x01	; 1
  84:	80 93 7e 00 	sts	0x007E, r24	; 0x80007e <__TEXT_REGION_LENGTH__+0x7e007e>
	ADMUX = 0;			// ADC0 (PC.0) used as analog input
  88:	ec e7       	ldi	r30, 0x7C	; 124
  8a:	f0 e0       	ldi	r31, 0x00	; 0
  8c:	10 82       	st	Z, r1
	ADMUX |= (1 << REFS0);	// use AVcc as the reference
  8e:	80 81       	ld	r24, Z
  90:	80 64       	ori	r24, 0x40	; 64
  92:	80 83       	st	Z, r24
	ADMUX |= (1 << ADLAR);	// Right adjust for 8 bit resolution
  94:	80 81       	ld	r24, Z
  96:	80 62       	ori	r24, 0x20	; 32
  98:	80 83       	st	Z, r24
	
	ADCSRA = 0x87;		// Enable ADC, system clock, 10000111
  9a:	87 e8       	ldi	r24, 0x87	; 135
  9c:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
	ADCSRB = 0x0;		// Free running mode
  a0:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x7e007b>
	
	//Configure	TIMER1
	TCCR1A|=(1<<COM1A1)|(1<<COM1B1)|(1<<WGM11);	//NON	Inverted	PWM
  a4:	e0 e8       	ldi	r30, 0x80	; 128
  a6:	f0 e0       	ldi	r31, 0x00	; 0
  a8:	80 81       	ld	r24, Z
  aa:	82 6a       	ori	r24, 0xA2	; 162
  ac:	80 83       	st	Z, r24
	TCCR1B|=(1<<WGM13)|(1<<WGM12)|(1<<CS11)|(1<<CS10); //PRESCALER=64	MODE	14(FAST	PWM)
  ae:	e1 e8       	ldi	r30, 0x81	; 129
  b0:	f0 e0       	ldi	r31, 0x00	; 0
  b2:	80 81       	ld	r24, Z
  b4:	8b 61       	ori	r24, 0x1B	; 27
  b6:	80 83       	st	Z, r24
	ICR1=4999;		//fPWM=50Hz	(Period	=	20ms	Standard).
  b8:	87 e8       	ldi	r24, 0x87	; 135
  ba:	93 e1       	ldi	r25, 0x13	; 19
  bc:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7e0087>
  c0:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7e0086>
	DDRB|=(1<<PB1);			//PWM Pin as Out
  c4:	21 9a       	sbi	0x04, 1	; 4
	
	while(1)
	{
		ADCSRA |= (1 << ADSC);			// Start conversion
  c6:	ea e7       	ldi	r30, 0x7A	; 122
  c8:	f0 e0       	ldi	r31, 0x00	; 0
		while((ADCSRA&(1<<ADIF))==0);	// Wait for conversion to finish
		
		//OCR1A=75;	//90 degrees
		//OCR1A=290;	//0 degrees
		OCR1A = (ADCH * 5 / 6) + 75;
  ca:	09 e7       	ldi	r16, 0x79	; 121
  cc:	10 e0       	ldi	r17, 0x00	; 0
  ce:	26 e0       	ldi	r18, 0x06	; 6
  d0:	30 e0       	ldi	r19, 0x00	; 0
  d2:	c8 e8       	ldi	r28, 0x88	; 136
  d4:	d0 e0       	ldi	r29, 0x00	; 0
	ICR1=4999;		//fPWM=50Hz	(Period	=	20ms	Standard).
	DDRB|=(1<<PB1);			//PWM Pin as Out
	
	while(1)
	{
		ADCSRA |= (1 << ADSC);			// Start conversion
  d6:	80 81       	ld	r24, Z
  d8:	80 64       	ori	r24, 0x40	; 64
  da:	80 83       	st	Z, r24
		while((ADCSRA&(1<<ADIF))==0);	// Wait for conversion to finish
  dc:	80 81       	ld	r24, Z
  de:	84 ff       	sbrs	r24, 4
  e0:	fd cf       	rjmp	.-6      	; 0xdc <main+0x5c>
		
		//OCR1A=75;	//90 degrees
		//OCR1A=290;	//0 degrees
		OCR1A = (ADCH * 5 / 6) + 75;
  e2:	d8 01       	movw	r26, r16
  e4:	8c 91       	ld	r24, X
  e6:	90 e0       	ldi	r25, 0x00	; 0
  e8:	ac 01       	movw	r20, r24
  ea:	44 0f       	add	r20, r20
  ec:	55 1f       	adc	r21, r21
  ee:	44 0f       	add	r20, r20
  f0:	55 1f       	adc	r21, r21
  f2:	84 0f       	add	r24, r20
  f4:	95 1f       	adc	r25, r21
  f6:	b9 01       	movw	r22, r18
  f8:	0e 94 83 00 	call	0x106	; 0x106 <__divmodhi4>
  fc:	65 5b       	subi	r22, 0xB5	; 181
  fe:	7f 4f       	sbci	r23, 0xFF	; 255
 100:	79 83       	std	Y+1, r23	; 0x01
 102:	68 83       	st	Y, r22

	}
 104:	e8 cf       	rjmp	.-48     	; 0xd6 <main+0x56>

00000106 <__divmodhi4>:
 106:	97 fb       	bst	r25, 7
 108:	07 2e       	mov	r0, r23
 10a:	16 f4       	brtc	.+4      	; 0x110 <__divmodhi4+0xa>
 10c:	00 94       	com	r0
 10e:	07 d0       	rcall	.+14     	; 0x11e <__divmodhi4_neg1>
 110:	77 fd       	sbrc	r23, 7
 112:	09 d0       	rcall	.+18     	; 0x126 <__divmodhi4_neg2>
 114:	0e 94 97 00 	call	0x12e	; 0x12e <__udivmodhi4>
 118:	07 fc       	sbrc	r0, 7
 11a:	05 d0       	rcall	.+10     	; 0x126 <__divmodhi4_neg2>
 11c:	3e f4       	brtc	.+14     	; 0x12c <__divmodhi4_exit>

0000011e <__divmodhi4_neg1>:
 11e:	90 95       	com	r25
 120:	81 95       	neg	r24
 122:	9f 4f       	sbci	r25, 0xFF	; 255
 124:	08 95       	ret

00000126 <__divmodhi4_neg2>:
 126:	70 95       	com	r23
 128:	61 95       	neg	r22
 12a:	7f 4f       	sbci	r23, 0xFF	; 255

0000012c <__divmodhi4_exit>:
 12c:	08 95       	ret

0000012e <__udivmodhi4>:
 12e:	aa 1b       	sub	r26, r26
 130:	bb 1b       	sub	r27, r27
 132:	51 e1       	ldi	r21, 0x11	; 17
 134:	07 c0       	rjmp	.+14     	; 0x144 <__udivmodhi4_ep>

00000136 <__udivmodhi4_loop>:
 136:	aa 1f       	adc	r26, r26
 138:	bb 1f       	adc	r27, r27
 13a:	a6 17       	cp	r26, r22
 13c:	b7 07       	cpc	r27, r23
 13e:	10 f0       	brcs	.+4      	; 0x144 <__udivmodhi4_ep>
 140:	a6 1b       	sub	r26, r22
 142:	b7 0b       	sbc	r27, r23

00000144 <__udivmodhi4_ep>:
 144:	88 1f       	adc	r24, r24
 146:	99 1f       	adc	r25, r25
 148:	5a 95       	dec	r21
 14a:	a9 f7       	brne	.-22     	; 0x136 <__udivmodhi4_loop>
 14c:	80 95       	com	r24
 14e:	90 95       	com	r25
 150:	bc 01       	movw	r22, r24
 152:	cd 01       	movw	r24, r26
 154:	08 95       	ret

00000156 <_exit>:
 156:	f8 94       	cli

00000158 <__stop_program>:
 158:	ff cf       	rjmp	.-2      	; 0x158 <__stop_program>
